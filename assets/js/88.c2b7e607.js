(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{571:function(e,t,s){"use strict";s.r(t);var v=s(4),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"_1-vue-是如何实现响应式数据的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-是如何实现响应式数据的"}},[e._v("#")]),e._v(" 1.Vue 是如何实现响应式数据的？")]),e._v(" "),s("p",[e._v("Vue 是采用数据劫持结合发布订阅模式来实现响应式数据的，具体是通过以下4个步骤：")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("observer")]),e._v("(监听器)：对数据对象进行遍历，包括子属性对象的属性，利用 "),s("code",[e._v("Object.defineProperty")]),e._v(" 给每个属性都加上 "),s("code",[e._v("set")]),e._v(" 和 "),s("code",[e._v("get")]),e._v(" 方法，这样当给对象的某个属性赋值时，就会触发 "),s("code",[e._v("set")]),e._v(" 方法，就能监听到数据的变化。")]),e._v(" "),s("li",[s("code",[e._v("compile")]),e._v("(解析器)：解析模板指令，将指令的变量替换成数据，然后初始化渲染页面视图，并为每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，就会收到通知，调用更新函数更新数据。")]),e._v(" "),s("li",[s("code",[e._v("watcher")]),e._v("(订阅者 )："),s("code",[e._v("watcher")]),e._v(" 是 "),s("code",[e._v("observer")]),e._v(" 和 "),s("code",[e._v("compile")]),e._v(" 之间通信的桥梁，主要任务是订阅 "),s("code",[e._v("observer")]),e._v(" 中的属性值变化的消息，"),s("code",[e._v("watcher")]),e._v(" 在自身实例化时会向 "),s("code",[e._v("dep")]),e._v(" 中添加自己，它有一个 "),s("code",[e._v("update")]),e._v(" 方法，当收到属性值变化的消息时，触发 "),s("code",[e._v("compile")]),e._v(" 中绑定的更新函数。")]),e._v(" "),s("li",[s("code",[e._v("Dep")]),e._v("(订阅器)："),s("code",[e._v("Dep")]),e._v(" 采用发布订阅模式。当页面使用对应属性时，会通过 "),s("code",[e._v("Dep")]),e._v(" 进行依赖收集（收集当前组件的 "),s("code",[e._v("watcher")]),e._v("），如果属性值发生变化，会触发 "),s("code",[e._v("Dep")]),e._v(" 的 "),s("code",[e._v("notify")]),e._v(" 方法，"),s("code",[e._v("notify")]),e._v(" 方法会触发当前收集的组件的  "),s("code",[e._v("watcher")]),e._v(" 的 "),s("code",[e._v("update")]),e._v(" 方法。")])]),e._v(" "),s("h2",{attrs:{id:"_2-vue-如何实现对数组的监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-如何实现对数组的监听"}},[e._v("#")]),e._v(" 2.Vue 如何实现对数组的监听？")]),e._v(" "),s("p",[e._v("Vue 重写了数组的以下原型方法：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("push")])]),e._v(" "),s("li",[s("code",[e._v("pop")])]),e._v(" "),s("li",[s("code",[e._v("shift")])]),e._v(" "),s("li",[s("code",[e._v("unshift")])]),e._v(" "),s("li",[s("code",[e._v("reverse")])]),e._v(" "),s("li",[s("code",[e._v("sort")])]),e._v(" "),s("li",[s("code",[e._v("splice")])])]),e._v(" "),s("p",[e._v("Vue 将 "),s("code",[e._v("data")]),e._v(" 中的数组，进行了原型链的重写，指向了自己定义的数组原型，当调用数组的上述方法时，可以通过依赖更新，如果数组中包含着引用类型数据，会对数组中的引用类型数据再次进行监听。")]),e._v(" "),s("h2",{attrs:{id:"_3-直接给数组项赋值-vue-能检测到变化吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-直接给数组项赋值-vue-能检测到变化吗"}},[e._v("#")]),e._v(" 3.直接给数组项赋值，Vue 能检测到变化吗？")]),e._v(" "),s("p",[e._v("由于 "),s("code",[e._v("JavaScript")]),e._v(" 的限制，Vue 不能检测到数组以下的变动：")]),e._v(" "),s("ul",[s("li",[e._v("当利用索引直接设置一个数组项时，例如 "),s("code",[e._v("vm.items[indexOfItem] = newValue")])]),e._v(" "),s("li",[e._v("当修改数组的长度时，例如 "),s("code",[e._v("vm.items.length = newLength")])])]),e._v(" "),s("p",[e._v("对于第一个问题，Vue 提供了以下操作方式：")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Vue.set")]),e._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" indexOfItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// vm.$set，Vue.set的一个别名")]),e._v("\nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("$set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" indexOfItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Array.prototype.splice")]),e._v("\nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("indexOfItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("对于第二个问题，Vue 提供了以下操作方式：")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Array.prototype.splice")]),e._v("\nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("newLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h2",{attrs:{id:"_4-vue如何通过-vm-set-来解决对象-数组新增不能响应的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue如何通过-vm-set-来解决对象-数组新增不能响应的问题"}},[e._v("#")]),e._v(" 4.Vue如何通过 "),s("code",[e._v("vm.$set()")]),e._v(" 来解决对象/数组新增不能响应的问题？")]),e._v(" "),s("p",[e._v("Vue 提供了 "),s("code",[e._v("Vue.set(object, propertyName, value)")]),e._v(" 和 "),s("code",[e._v("Vue.set(vm.items, indexOfItem, newValue)")]),e._v(" 来解决给对象新增属性和给数组新增元素不能触发响应式的问题。")]),e._v(" "),s("p",[e._v("其原理如下：")]),e._v(" "),s("ul",[s("li",[e._v("如果目标是数组，直接使用数组的 "),s("code",[e._v("splice")]),e._v(" 方法触发响应式。")]),e._v(" "),s("li",[e._v("如果目标是对象，会先判断对象属性是否存在，对象是否是响应式，如果要对属性进行响应式处理，则是通过 "),s("code",[e._v("defineReactive")]),e._v(" 方法进行响应式处理。")])]),e._v(" "),s("h2",{attrs:{id:"_5-object-defineproperty-有什么缺点-为什么-vue3-0-开始使用-proxy-实现响应式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-object-defineproperty-有什么缺点-为什么-vue3-0-开始使用-proxy-实现响应式"}},[e._v("#")]),e._v(" 5.Object.defineProperty 有什么缺点？（为什么 Vue3.0 开始使用 Proxy 实现响应式）")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("Object.defineProperty")]),e._v(" 只能劫持对象的属性，因此需要遍历对象的每个属性，而 "),s("code",[e._v("Proxy")]),e._v(" 可以直接代理对象。")]),e._v(" "),s("li",[s("code",[e._v("Object.defineProperty")]),e._v(" 对新增属性需要手动进行观察，由于 "),s("code",[e._v("Object.defineProperty")]),e._v(" 劫持的是对象的属性（第一点），所以新增属性时，需要重新遍历对象，对其新增属性再使用 "),s("code",[e._v("Object.defineProperty")]),e._v(" 进行劫持 （正是这个原因导致我们在给 "),s("code",[e._v("data")]),e._v(" 中的数组或对象新增属性时，需要使用 "),s("code",[e._v("$set")]),e._v(" 才能保证视图可以更新）。")]),e._v(" "),s("li",[s("code",[e._v("Proxy")]),e._v(" 性能高，支持13种拦截方式。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);