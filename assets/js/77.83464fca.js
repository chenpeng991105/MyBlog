(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{558:function(e,v,_){"use strict";_.r(v);var t=_(4),d=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"vue-组件的生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件的生命周期"}},[e._v("#")]),e._v(" Vue 组件的生命周期")]),e._v(" "),_("p",[e._v("从开始创建、初始化数据、编译模板、挂载DOM->渲染、更新->渲染、卸载的一系列过程")]),e._v(" "),_("table",[_("thead",[_("tr",[_("th",[e._v("生命周期")]),e._v(" "),_("th",[e._v("描述")])])]),e._v(" "),_("tbody",[_("tr",[_("td",[e._v("beforeCreate")]),e._v(" "),_("td",[e._v("new Vue() 之后触发的第一个钩子，在当前阶段 data、methods、computed 以及 watch 上的数据和方法都不能被访问")])]),e._v(" "),_("tr",[_("td",[e._v("created")]),e._v(" "),_("td",[e._v("发生在实例创建完成后，当前阶段已经完成了数据观测，也就是可以使用数据、更改数据，在这里更改数据不会触发 updated 函数，可以做一些初始数据的获取，在当前阶段无法与 Dom 进行交互（可以通过 "),_("code",[e._v("vm.$nextTick")]),e._v(" 来访问 Dom）")])]),e._v(" "),_("tr",[_("td",[e._v("beforeMount")]),e._v(" "),_("td",[e._v("发生在挂载之前，在这之前 template 模板已导入渲染函数编译。而当前阶段虚拟 Dom 已经创建完成，即将开始渲染。在此时也可以进行数据修改，不会触发 updated 函数")])]),e._v(" "),_("tr",[_("td",[e._v("mounted")]),e._v(" "),_("td",[e._v("发生在挂载之后，在当前阶段，真实的 Dom 挂载完毕，数据完成双向绑定，可以访问到 Dom 节点，使用 "),_("code",[e._v("$refs")]),e._v(" 属性对 Dom 进行操作")])]),e._v(" "),_("tr",[_("td",[e._v("beforeUpdate")]),e._v(" "),_("td",[e._v("发生在更新之前，也就是响应式数据发生更新，虚拟 Dom 重新渲染之前被触发，可以在当前阶段进行更改数据，不会造成重渲染")])]),e._v(" "),_("tr",[_("td",[e._v("updated")]),e._v(" "),_("td",[e._v("发生在更新完成之后，在当前阶段，组件 Dom 已完成更新，要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新")])]),e._v(" "),_("tr",[_("td",[e._v("beforeDestroy")]),e._v(" "),_("td",[e._v("发生在实例销毁之前，在当前阶段实例完全可以被使用，可以在这时进行收尾工作，比如清除定时器")])]),e._v(" "),_("tr",[_("td",[e._v("destroyed")]),e._v(" "),_("td",[e._v("发生在实例销毁之后，这个时候只剩下 Dom 空壳，组件已被拆散，数据绑定被卸除，监听被移除，子实例也统统被销毁")])])])]),e._v(" "),_("p",[_("code",[e._v("keep-alive")]),e._v(" 的生命周期，只有用 "),_("code",[e._v("keep-alive")]),e._v(" 包裹的组件才会有以下两个生命周期钩子函数：")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("activated")]),e._v("：被 keep-alive 缓存的组件激活时调用")]),e._v(" "),_("li",[_("code",[e._v("deactivated")]),e._v("：被 keep-alive 缓存的组件停用时调用")])]),e._v(" "),_("h2",{attrs:{id:"vue-中父子组件的生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-中父子组件的生命周期"}},[e._v("#")]),e._v(" Vue 中父子组件的生命周期")]),e._v(" "),_("p",[e._v("父子组件的生命周期是一个嵌套的过程")]),e._v(" "),_("ol",[_("li",[_("p",[e._v("渲染的过程：")]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeCreate")]),e._v(" => 父 "),_("code",[e._v("created")]),e._v(" => 父 "),_("code",[e._v("beforeMount")]),e._v(" => 子 "),_("code",[e._v("beforeCreate")]),e._v(" => 子 "),_("code",[e._v("created")]),e._v(" => 子 "),_("code",[e._v("beforeMount")]),e._v(" => 子 "),_("code",[e._v("mounted")]),e._v(" => 父 "),_("code",[e._v("mounted")])])]),e._v(" "),_("li",[_("p",[e._v("子组件更新过程")]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeUpdate")]),e._v(" => 子 "),_("code",[e._v("beforeUpdate")]),e._v(" => 子 "),_("code",[e._v("updated")]),e._v(" => 父 "),_("code",[e._v("updated")])])]),e._v(" "),_("li",[_("p",[e._v("父组件更新过程")]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeUpdate")]),e._v(" => 父 "),_("code",[e._v("updated")])])]),e._v(" "),_("li",[_("p",[e._v("销毁过程")]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeDestroy")]),e._v(" => 子 "),_("code",[e._v("beforeDestroy")]),e._v(" => 子 "),_("code",[e._v("destroyed")]),e._v(" => 父 "),_("code",[e._v("beforeDestroy")])])])])])}),[],!1,null,null,null);v.default=d.exports}}]);