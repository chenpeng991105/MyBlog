(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{551:function(t,e,a){"use strict";a.r(e);var v=a(4),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"tcp-与-udp-的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-与-udp-的比较"}},[t._v("#")]),t._v(" TCP 与 UDP 的比较")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}}),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("UDP")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("是否连接")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("面向连接")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无连接")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("是否可靠")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可靠传输，使用流量控制和拥塞控制")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不可靠传输，使用流量控制和拥塞控制")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("连接对象个数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只能是一对一通信")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持一对一、一对多、多对一和多对多通信")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("传输方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("面向字节流")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("面向报文")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("首部开销")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首部最小20字节，最大60字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首部开销小，仅8字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("适用场景")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("适用于要求可靠传输的应用，例如文件传输")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("适用于实时应用（视频、直播等）")])])])]),t._v(" "),a("h2",{attrs:{id:"tcp-的流量控制与拥塞控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的流量控制与拥塞控制"}},[t._v("#")]),t._v(" TCP 的流量控制与拥塞控制")]),t._v(" "),a("h3",{attrs:{id:"流量控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流量控制"}},[t._v("#")]),t._v(" 流量控制")]),t._v(" "),a("p",[t._v("流量控制是指如果发送者发送数据过快，接收者来不及丢失，那么就会有分组丢失。为了避免分组丢失，控制发送者的发送速度，使接收者来得及接收。")]),t._v(" "),a("p",[t._v("流量控制的目的是防止分组丢失，它是构成TCP可靠性的一方面。")]),t._v(" "),a("p",[a("strong",[t._v("如何实现流量控制？")])]),t._v(" "),a("p",[t._v("由滑动窗口协议（连续ARQ协议）实现，滑动窗口协议既保证了分组无差错、有序接收，也实现了流量控制。主要的方式是接收者返回的  ACK 中会包含自己的接收窗口的大小，并且利用大小来控制发送者的数据发送。")]),t._v(" "),a("p",[a("strong",[t._v("流量控制引发的死锁？怎么避免死锁的发生？")])]),t._v(" "),a("p",[t._v("当发送者收到了一个窗口为0的应答，发送者便停止发送，等待接收者的下一个应答。但是如果这个窗口不为0的应答在传输过程丢失，发送者一直等待下去，而接收者以为发送者已经收到该应答，等待接收新数据，这样双方就相互等待，从而产生死锁。\n为了避免流量控制引发的死锁，TCP使用了持续计时器。每当发送者收到一个零窗口的应答后就启动该计时器。时间一到便主动发送报文询问接收者的窗口大小。若接收者仍然返回零窗口，则重置该计时器继续等待；若窗口不为0，则表示应答报文丢失了，此时重置发送窗口后开始发送，这样就避免了死锁的产生。")]),t._v(" "),a("h3",{attrs:{id:"拥塞控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[t._v("#")]),t._v(" 拥塞控制")]),t._v(" "),a("p",[t._v("拥塞控制是作用域网络的，它是防止过多的数据注入到网络中，避免出现网络负载过大的情况。")]),t._v(" "),a("p",[a("strong",[t._v("拥塞控制的算法")])]),t._v(" "),a("ol",[a("li",[t._v("慢开始算法")]),t._v(" "),a("li",[t._v("拥塞避免算法")]),t._v(" "),a("li",[t._v("快重传算法")]),t._v(" "),a("li",[t._v("快恢复算法")])])])}),[],!1,null,null,null);e.default=_.exports}}]);